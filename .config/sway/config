
include /etc/sway/config.d/*

input "type:keyboard" {
  xkb_variant nodeadkeys
  xkb_options ctrl:nocaps
  xkb_numlock enabled
}

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display 13

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# my screenshot tool
bindsym XF86Favorites exec flameshot gui
bindsym $mod+s exec rm -f /tmp/screenshot.png && grim -g "$(slurp)" /tmp/screenshot.png && wl-copy < /tmp/screenshot.png
# maybe pipe the output into swappy..

bindsym $mod+e exec alacritty --class 'emojis' --command bash -c "cat ~/.config/sway/emoji.txt | fzf --tiebreak begin | cut -d: -f2- | sed -r 's/.//; s/\\\\\\\\n/\\\\n/g' | wl-copy -n"
for_window [app_id="^emojis$"] floating enable, border pixel 5, resize set width 25 ppt height 20 ppt

bindsym $mod+p exec alacritty --class 'passwords' --command fish -c "cd \$PASSWORD_STORE_DIR && pass -c (find . -type f -name '*.gpg' | string sub -s 3 -e -4 | fzf)"
for_window [app_id="^passwords$"] floating enable, border pixel 5, resize set width 25 ppt height 20 ppt

# gaps
gaps inner 2
gaps outer -2

# disable capslock
exec setxkbmap -option ctrl:nocaps

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Start a terminal
bindsym $mod+Return exec alacritty

# Kill focused window
bindsym $mod+Shift+q kill

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
bindsym $mod+d exec alacritty --class 'launcher' --command bash -c 'MOZ_ENABLE_WAYLAND=1 compgen -c | sort -u | fzf | xargs -r swaymsg -t command exec'
for_window [app_id="^launcher$"] floating enable, border pixel 5, resize set width 25 ppt height 20 ppt

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload


    bindsym $mod+Shift+e exec "swaynag -t warning -m 'Do you really want to shutdown the PC?' -B 'Yes shutdown' 'systemctl poweroff -i' -B 'firmware-setup' 'systemctl reboot --firmware-setup'"
    bindsym $mod+Shift+s exec "systemctl suspend"

for_window [title="^(Android Emulator).*"] floating enable

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

# move whole workspace
bindsym $mod+Ctrl+$left move workspace to output left
bindsym $mod+Ctrl+$down move workspace to output down
bindsym $mod+Ctrl+$up move workspace to output up
bindsym $mod+Ctrl+$right move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Down move workspace to output down
bindsym $mod+Ctrl+Up move workspace to output up
bindsym $mod+Ctrl+Right move workspace to output right

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"



mode "media control" {

	bindsym n exec playerctl next
        bindsym p exec playerctl previous 
	bindsym space exec playerctl play-pause

	bindsym l exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
	bindsym s exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
	bindsym m exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+m mode "default"

}
bindsym $mod+m mode "media control"



mode "launch" {

	bindsym s exec flameshot gui
	bindsym d exec discord
	bindsym p exec pavucontrol 
	bindsym c exec chromium
	bindsym v exec code
 
	bindsym $mod+shift+s exec systemctl suspend

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+m mode "default"

}
bindsym $mod+a mode "launch"


mode "screen" {

	bindsym 1 exec brightness 0.1
	bindsym 2 exec brightness 0.2
	bindsym 3 exec brightness 0.3
	bindsym 4 exec brightness 0.4
	bindsym 5 exec brightness 0.5
	bindsym 6 exec brightness 0.6
	bindsym 7 exec brightness 0.7
	bindsym 8 exec brightness 0.8
	bindsym 9 exec brightness 0.9
	bindsym 0 exec brightness 1
	# bindsym 1 exec xrandr --output HDMI-0 --output DVI-D-0 --output DP-1 --brightness 1
	
	bindsym b exec xrandr --output HDMI-0 --output DVI-D-0 --output DP-1 --brightness 0.6
	bindsym d exec xrandr --output HDMI-0 --output DVI-D-0 --output DP-1 --brightness 0.3

	# back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+m mode "default"

}
bindsym $mod+n mode "screen"


mode "zigbee" {

	bindsym 1 exec brightness 0.1
	bindsym 2 exec brightness 0.2
	bindsym 3 exec brightness 0.3
	bindsym 4 exec brightness 0.4
	bindsym 5 exec brightness 0.5
	bindsym 6 exec brightness 0.6
	bindsym 7 exec brightness 0.7
	bindsym 8 exec brightness 0.8
	bindsym 9 exec brightness 0.9
	bindsym 0 exec brightness 1

	bindsym t exec mosquitto_pub -h 10.1.128.1 -p 1883 -t 'zigbee/0x680ae2fffea3eb13/set' -m '{ "state": "TOGGLE" }'

	# back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+m mode "default"
}
bindsym $mod+z mode "zigbee"


# green: #14A76C
# orange: #FF652F
# dark gray: #272727
# light gray: #747474

set $bg-color            #272727    
set $text-color          #14A76C
set $inactive-bg-color   #272727
set $inactive-text-color #747474

# my window colors      border               background         text                 indicator
client.focused          $bg-color            $bg-color          $text-color          #00ff00      
client.unfocused        $inactive-bg-color   $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color   $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $inactive-bg-color   $inactive-bg-color $inactive-text-color #00ff00

hide_edge_borders both
default_border none

# Read `man 5 sway-bar` for more information about this section.
bar {
    status_command slstatus -s
    colors {
        statusline #ffffff
        background $bg-color

        separator #757575
          
        #                  border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   #FF652F            $bg-color          $text-color
    }
}

### Background image configuration
# Example:
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

output * bg /usr/share/backgrounds/joern/wallPaperRight.png fill

## Internal
# There is a wontfix issue in Xwayland with negative pos values. To workround this issue, the internal monitor is at 5000 5000 instead of 0 0
output eDP-1 pos 5000 5000 mode "1920x1080@60Hz"

# Home PC
# Center
output 'Samsung Electric Company S24F350 H4ZK601999' bg /usr/share/backgrounds/joern/wallPaperLeft.png fill pos 5000 5000 res 1920x1080@60Hz
# Right
output 'LG Electronics W2242 0x00026E2A' bg /usr/share/backgrounds/joern/wallPaperCenter.png fill pos 6920 5000 res 1680x1050@60Hz

# Hannover
output 'HP Inc. HP Z27 CN40130G7D' pos 4040 2840 mode "3840x2160@30Hz"
## Right
output 'HP Inc. HP Z27 CN40130GCP' pos 7880 2840 mode "3840x2160@30Hz"

# Karlsruhe
output "Eizo Nanao Corporation EV2457 0x01B28E35" mode "1920x1200@60Hz" pos 6920 5000
